PROVING double_plus
ATTEMPTED LEMMA PROOF (LEMMAS USED: 0)







From LF Require Export Basics.








Theorem add_0_r_firsttry : forall n:nat,
  n + 0 = n.



Proof.
  intros n.
  simpl. 
Abort.



Theorem add_0_r_secondtry : forall n:nat,
  n + 0 = n.
Proof.
  intros n. destruct n as [| n'] eqn:E.
  - 
    reflexivity. 
  - 
    simpl.       
Abort.





Theorem add_0_r : forall n:nat, n + 0 = n.
Proof.
  intros n. induction n as [| n' IHn'].
  -     reflexivity.
  -  simpl. rewrite -> IHn'. reflexivity.  Qed.



Theorem minus_n_n : forall n,
  minus n n = 0.
Proof.
  
  intros n. induction n as [| n' IHn'].
  - 
    simpl. reflexivity.
  - 
    simpl. rewrite -> IHn'. reflexivity.  Qed.





Theorem mul_0_r : forall n:nat,
  n * 0 = 0.
Proof.
  induction n as [| n' IHn'].
  -     reflexivity.
  -  simpl. rewrite -> IHn'. reflexivity.
Qed.

Theorem plus_n_Sm : forall n m : nat,
  S (n + m) = n + (S m).
Proof.
  intros n m.
  induction n as [| n' IHn'].
  - 
    reflexivity.
  - 
    simpl. rewrite -> IHn'. reflexivity.
Qed.

Theorem add_comm : forall n m : nat,
  n + m = m + n.
Proof.
  intros n m.
  induction n as [| n' IHn'].
  - 
    simpl. rewrite <- plus_n_O. reflexivity.
  - 
    simpl. rewrite <- plus_n_Sm. rewrite <- IHn'. reflexivity.
Qed.

Theorem add_assoc : forall n m p : nat,
  n + (m + p) = (n + m) + p.
Proof.
  intros n m p.
  induction n as [| n' IHn'].
  - 
    reflexivity.
  - 
    simpl. rewrite -> IHn'. reflexivity.
Qed.




Fixpoint double (n:nat) :=
  match n with
  | O => O
  | S n' => S (S (double n'))
  end.





Lemma double_plus : forall n, double n = n + n .

Proof.
(*
     We will proceed by induction on n.
The base case will be when n = 0.
The inductive case will be when n = S n'.
*)
  intros n.
induction n as [|n' IHn'].
(*
     Base case: n = 0
     We need to prove: double 0 = 0 + 0
     This follows directly from the definition of double.
*)
  - simpl.
reflexivity.
(*
     Inductive case: n = S n'
     We need to prove: double (S n') = S n' + S n'
     By the induction hypothesis, we know that double n' = n' + n'.
We can rewrite this as S n' + n' = S n' + n'.
Now we just need to prove that S n' + n' = S n' + S n'.
This follows from the theorem plus_n_Sm.
*)
  - simpl.
rewrite IHn'.
now rewrite plus_n_Sm.
Qed.

Outdated contents in ..cache: recomputing
LEMMA PROOF IS VALID

